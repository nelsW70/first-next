{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/nelsonwfoltz/Desktop/first-next/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  console.log(posts);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"our index page\"), posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/post\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, post.title));\n  }));\n}; //alternate syntax\n\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get('https://jsonplaceholder.typicode.com/posts');\n\n        case 2:\n          res = _context.sent;\n          data = res.data;\n          return _context.abrupt(\"return\", {\n            posts: data\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index; // class Index extends Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   static async getInitialProps() {\n//     return { res: console.log('fetching your data') };\n//   }\n//   render() {\n//     return (\n//       <>\n//         <h1>our index page</h1>\n//       </>\n//     );\n//   }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/nelsonwfoltz/Desktop/first-next/pages/index.js"],"names":["React","Component","axios","Link","Index","posts","console","log","map","post","id","title","getInitialProps","get","res","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGA,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBD,IAAI,CAACE,KAAzB,CADF,CADa;AAAA,GAAd,CAFH,CADF;AAUD,CAZD,C,CAcA;;;KAdMP,K;AAeNA,KAAK,CAACQ,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJV,KAAK,CAACW,GAAN,CAAU,4CAAV,CADI;;AAAA;AAChBC,UAAAA,GADgB;AAEdC,UAAAA,IAFc,GAELD,GAFK,CAEdC,IAFc;AAAA,2CAGf;AAAEV,YAAAA,KAAK,EAAEU;AAAT,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAMA,eAAeX,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\n\nconst Index = ({ posts }) => {\n  console.log(posts);\n  return (\n    <>\n      <h1>our index page</h1>\n      {posts.map(post => (\n        <li key={post.id}>\n          <Link href=\"/post\">{post.title}</Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\n//alternate syntax\nIndex.getInitialProps = async () => {\n  const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n  const { data } = res;\n  return { posts: data };\n};\n\nexport default Index;\n\n// class Index extends Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   static async getInitialProps() {\n//     return { res: console.log('fetching your data') };\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <h1>our index page</h1>\n//       </>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}